library IEEE;
use IEEE.STD.LOGIC.1164.ALL;
use IEEE.STD.LOGIC.UNSIGNED.ALL;
use IEEE.STD.LOGIC.ARITH.ALL;

entity alu_4bit is
PORT(a,b : in std_logic_vector(3 downto 0);
	sel : in std_logic_vector(2 downto 0);
	op : out std_logic_vector(3 downto 0);
end alu_4bit;

architecture Behavioral of alu_4bit is 

begin

	process (a, b, sel)

	begin

		case sel is

			when "000" =>y<= NOT a;

			when"001" =>y<=a AND b;

			when"010" =>y<=a OR b;

			when"111" =>y<=a NOR b;

			when"011" =>y<=a XOR b;

			when"100" =>y<-a NAND b;

			when others =>null;

		end case;

	end process;

end Behavioral;



TEST BENCH........

begin

a<="001"; 
b<="010"; 

sel<="000"; 
wait for 10 ns; 

sel<="001"; 
wait for 10 ns; 

sel<="010"; 
wait for 10 ns; 

sel<="011"; 
wait for 10 ns; 

sel<="100"; 
wait for 10 ns;

sel<="101"; 
wait for 10 ns; 

sel<="110"; 
wait for 10 ns;

sel<="111"; 
wait for 10 ns;

wait; 
end process